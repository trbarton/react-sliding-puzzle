{"version":3,"sources":["MapImg/9.png","MapImg/2.png","MapImg/3.png","MapImg/4.png","MapImg/5.png","MapImg/6.png","MapImg/7.png","MapImg/8.png","Menu.js","Tile.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","clickHandler","_this","props","restart","react_default","a","createElement","id","this","status","className","winClass","onClick","Component","Tile","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getBackgroundStyle","style","backgroundImage","concat","Map9","backgroundSize","Map8","Map7","Map6","Map5","Map4","Map3","Map2","e","console","log","tileClick","target","pos","Game","shuffle","array","map","num","i","inversions","j","length","reduce","b","countInversions","temp","index","counter","Math","floor","random","fischerYates","tile","switchTiles","getInitialState","tiles","win","checkBoard","state","tileEl","position","moves","animateTiles","move","document","querySelector","direction","classList","add","setTimeout","remove","afterAnimate","setState","bind","assertThisInitialized","restartGame","_this2","Tile_Tile","Menu_Menu","App","Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c535e7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/9.0148a473.png\";","module.exports = __webpack_public_path__ + \"static/media/2.1ea015a4.png\";","module.exports = __webpack_public_path__ + \"static/media/3.8d75d35e.png\";","module.exports = __webpack_public_path__ + \"static/media/4.6a562d92.png\";","module.exports = __webpack_public_path__ + \"static/media/5.e559b673.png\";","module.exports = __webpack_public_path__ + \"static/media/6.750ec11a.png\";","module.exports = __webpack_public_path__ + \"static/media/7.c21865f6.png\";","module.exports = __webpack_public_path__ + \"static/media/8.d2a6f4b5.png\";","import React, {Component} from 'react';\n\nexport default class Menu extends Component {\n\n  clickHandler = () => {\n    this.props.restart();\n  }\n\n  render() {\n    return (\n      <div id=\"menu\">\n        <h3 id=\"subtitle\">{this.props.status}</h3>\n        <a className={this.props.winClass} onClick={this.clickHandler}>Restart</a>\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport Map2 from './MapImg/2.png'\nimport Map3 from './MapImg/3.png'\nimport Map4 from './MapImg/4.png'\nimport Map5 from './MapImg/5.png'\nimport Map6 from './MapImg/6.png'\nimport Map7 from './MapImg/7.png'\nimport Map8 from './MapImg/8.png'\nimport Map9 from './MapImg/9.png'\n\nexport default class Tile extends Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  getBackgroundStyle = () => {\n    const style = {\n      backgroundImage: `url(${Map9})`,\n      backgroundSize: '100% 100%'\n    }\n\n    switch (this.props.status) {\n      case 1:\n        style.backgroundImage = `url(${Map9})`;\n        break;\n      case 2:\n        style.backgroundImage = `url(${Map8})`;\n        break;\n      case 3:\n        style.backgroundImage = `url(${Map7})`;\n        break;\n      case 4:\n        style.backgroundImage = `url(${Map6})`;\n        break;\n      case 5:\n        style.backgroundImage = `url(${Map5})`;\n        break;\n      case 6:\n        style.backgroundImage = `url(${Map4})`;\n        break;\n      case 7:\n        style.backgroundImage = `url(${Map3})`;\n        break;\n      case 8:\n        style.backgroundImage = `url(${Map2})`;\n        break;\n      default:\n        style.backgroundImage = '';\n    }\n    return style;\n  }\n\n  clickHandler = (e) => {\n    console.log(this.props);\n    this.props.tileClick(e.target, this.props.pos, this.props.status);\n  }\n\n  render() {\n    return (\n      <div className=\"tile\" onClick={this.clickHandler} style={this.getBackgroundStyle()}>\n        {/* {this.props.status} */}\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport Menu from './Menu';\nimport Tile from './Tile';\n\nexport default class Game extends Component {\n\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = this.getInitialState();\n  }\n\n  shuffle = (array) => {\n\n    // switches first two tiles\n    function switchTiles(array) {\n      var i = 0;\n\n      // find the first two tiles in a row\n      while (!array[i] || !array[i + 1]) i++;\n\n      // store tile value\n      var tile = array[i];\n      // switche values\n      array[i] = array[i + 1];\n      array[i + 1] = tile;\n\n      return array;\n    }\n\n    // counts inversions\n    function countInversions(array) {\n      // make array of inversions\n      var invArray = array.map(function (num, i) {\n        var inversions = 0;\n        for (let j = i + 1; j < array.length; j++) {\n          if (array[j] && array[j] < num) {\n            inversions += 1;\n          }\n        }\n        return inversions;\n      });\n      // return sum of inversions array\n      return invArray.reduce(function (a, b) {\n        return a + b;\n      });\n    }\n\n    // fischer-yates shuffle algorithm\n    function fischerYates(array) {\n      var counter = array.length, temp, index;\n\n      // While there are elements in the array\n      while (counter > 0) {\n        // Pick a random index\n        index = Math.floor(Math.random() * counter);\n        // Decrease counter by 1\n        counter--;\n        // And swap the last element with it\n        temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n      }\n\n      return array;\n    }\n\n    // Fischer-Yates shuffle\n    array = fischerYates(array);\n\n    // check for even number of inversions\n    if (countInversions(array) % 2 !== 0) {\n      // switch two tiles if odd\n      array = switchTiles(array);\n    }\n\n    return array;\n  }\n\n  getInitialState = () => {\n    return {\n      // initial state of game board\n      tiles: this.shuffle([\n        1, 2, 3,\n        4, 5, 6,\n        7, 8, ''\n      ]),\n      win: false,\n    };\n  }\n\n  checkBoard = () => {\n    var tiles = this.state.tiles;\n\n    for (var i = 0; i < tiles.length - 1; i++) {\n      if (tiles[i] !== i + 1) return false;\n    }\n\n    return true;\n  }\n\n  tileClick = (tileEl, position, status) => {\n    console.log(`position: ${position}`);\n\n    var tiles = this.state.tiles;\n    // Possible moves\n    // [up,right,down,left]\n    // 9 = out of bounds\n    var moves = [\n      [null, 1, 3, null], [null, 2, 4, 0], [null, null, 5, 1],\n      [0, 4, 6, null], [1, 5, 7, 3], [2, null, 8, 4],\n      [3, 7, null, null], [4, 8, null, 6], [5, null, null, 7]\n    ];\n\n    function animateTiles(i, move) {\n      var directions = ['up', 'right', 'down', 'left'];\n      var moveToEl = document.querySelector('.tile:nth-child(' + (move + 1) + ')');\n      const direction = directions[i];\n      tileEl.classList.add('move-' + direction);\n      // this is all a little hackish.\n      // css/js are used together to create the illusion of moving blocks\n      setTimeout(function () {\n        // moveToEl.classList.add('highlight');\n        tileEl.classList.remove('move-' + direction);\n        // time horribly linked with css transition\n        setTimeout(function () {\n          // moveToEl.classList.remove('highlight');\n        }, 400);\n      }, 200);\n    }\n\n    // called after tile is fully moved\n    // sets new state\n    function afterAnimate() {\n      tiles[position] = '';\n      tiles[move] = status;\n      this.setState({\n        tiles: tiles,\n        moves: moves,\n        win: this.checkBoard()\n      });\n    };\n\n    // return if they've already won\n    if (this.state.win) return;\n\n    // check possible moves\n    for (var i = 0; i < moves[position].length; i++) {\n      var move = moves[position][i];\n      // if an adjacent tile is empty\n      if (typeof move === 'number' && !tiles[move]) {\n        animateTiles(i, move);\n        setTimeout(afterAnimate.bind(this), 200);\n        break;\n      }\n    }\n  }\n\n  restartGame = () => {\n    this.setState(this.getInitialState());\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"game-board\">\n          {\n            this.state.tiles.map((tile, position) => {\n              return (<Tile status={tile} pos={position} tileClick={this.tileClick} />)\n            })\n          }\n        </div>\n        <Menu winClass={this.state.win ? 'button win' : 'button'} status={this.state.win ? 'You win!' : 'Solve the puzzle.'} restart={this.restartGame} />\n      </div>\n    )\n  }\n};","import React, { Component } from 'react';\nimport Game from './Game';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div id=\"game-wrapper\">\n        <h1 className=\"title\">CEO Slide Puzzle</h1>\n        <Game></Game>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}